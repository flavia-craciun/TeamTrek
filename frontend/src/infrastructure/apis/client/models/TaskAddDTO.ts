/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TaskStatusEnum } from './TaskStatusEnum';
import {
    TaskStatusEnumFromJSON,
    TaskStatusEnumFromJSONTyped,
    TaskStatusEnumToJSON,
} from './TaskStatusEnum';

/**
 * 
 * @export
 * @interface TaskAddDTO
 */
export interface TaskAddDTO {
    /**
     * 
     * @type {string}
     * @memberof TaskAddDTO
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof TaskAddDTO
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TaskAddDTO
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof TaskAddDTO
     */
    taskName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TaskAddDTO
     */
    description?: string | null;
    /**
     * 
     * @type {TaskStatusEnum}
     * @memberof TaskAddDTO
     */
    status?: TaskStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof TaskAddDTO
     */
    projectId?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskAddDTO
     */
    assignedToUserId?: string;
}

/**
 * Check if a given object implements the TaskAddDTO interface.
 */
export function instanceOfTaskAddDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaskAddDTOFromJSON(json: any): TaskAddDTO {
    return TaskAddDTOFromJSONTyped(json, false);
}

export function TaskAddDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskAddDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'taskName': !exists(json, 'taskName') ? undefined : json['taskName'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'status': !exists(json, 'status') ? undefined : TaskStatusEnumFromJSON(json['status']),
        'projectId': !exists(json, 'projectId') ? undefined : json['projectId'],
        'assignedToUserId': !exists(json, 'assignedToUserId') ? undefined : json['assignedToUserId'],
    };
}

export function TaskAddDTOToJSON(value?: TaskAddDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'taskName': value.taskName,
        'description': value.description,
        'status': TaskStatusEnumToJSON(value.status),
        'projectId': value.projectId,
        'assignedToUserId': value.assignedToUserId,
    };
}

